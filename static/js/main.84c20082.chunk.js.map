{"version":3,"sources":["components/Header/Header.js","components/PostWrapper/PostWrapper.js","components/Navigator/Navigator.js","components/Post/Post.js","components/CommentList/CommentList.js","components/Comment/Comment.js","components/Warning/Warning.js","services/post.js","containers/PostContainer/PostContainer.js","App.js","index.js"],"names":["Header","className","PostWrapper","children","Navigate","onClick","postId","disabled","Button","color","content","icon","labelPosition","Post","props","state","postInfo","title","body","comments","animate","direction","nextProps","this","setState","setTimeout","animation","Component","CommentList","commentList","map","comment","index","name","email","split","key","Comment","Warning","closing","visible","message","getPost","axios","get","getComments","PostContainer","fetchPostInfo","a","fetching","Promise","all","service","info","data","console","log","post","showWarning","handlenavigateClick","type","warningVisibility","App","window","ReactDOM","render","document","getElementById"],"mappings":"8bASeA,G,OANA,kBACX,yBAAKC,UAAU,UAAf,WCOWC,G,OARK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,OACI,yBAAKF,UAAY,eACZE,K,SC4BEC,G,OA9BE,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,SAAnB,OACb,yBAAKN,UAAY,YAEb,kBAACO,EAAA,EAAD,CACIC,MAAQ,OACRC,QAAU,WACVC,KAAO,aACPC,cAAgB,OAChBP,QACI,kBAAMA,EAAQ,SAElBE,SAAUA,IAEd,yBAAKN,UAAY,qBACZK,GAEL,kBAACE,EAAA,EAAD,CACIC,MAAQ,OACRC,QAAU,OACVC,KAAO,cACPC,cAAgB,QAChBX,UAAY,wBACZI,QACI,kBAAMA,EAAQ,SAElBE,SAAUA,OCqCPM,G,yDA7DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAW,CACPC,MAAM,KACNC,KAAK,KACLC,SAAS,IAEbC,SAAQ,EACRC,UAAU,QATC,E,sEAYQC,GAAW,IAAD,OAC1BL,EAAuBK,EAAvBL,MAAMC,EAAiBI,EAAjBJ,KAAKC,EAAYG,EAAZH,SAClB,GAAGI,KAAKT,MAAMR,SAAWgB,EAAUhB,OAAO,CACtC,IAAMe,EAAYE,KAAKT,MAAMR,OAASgB,EAAUhB,OAAS,OAAS,QAgBlE,OAfAiB,KAAKC,SAAS,CACVH,YACAD,SAAQ,SAGZK,YACI,WACI,EAAKD,SAAS,CACVR,SAAS,CACLC,QAAMC,OAAKC,YAEfC,SAAU,MAEhB,KAIVG,KAAKC,SAAS,CACVR,SAAW,CACPC,QAAMC,OAAKC,gB,+BAIb,IAAD,EAC4BI,KAAKR,MAAMC,SAApCC,EADH,EACGA,MAAOC,EADV,EACUA,KAAMC,EADhB,EACgBA,SADhB,EAGuBI,KAAKR,MAA3BK,EAHD,EAGCA,QAASC,EAHV,EAGUA,UAETK,EAAYN,EAAuB,SAAZC,EAAqB,gBAAkB,iBACrD,SAAZA,EAAqB,gBAAkB,eAC1C,OAAW,OAARJ,EAAqB,KAGpB,yBAAKhB,UAAS,wBAAqByB,IAC/B,4BAAKT,GACL,2BACKC,GAEL,kBAAC,EAAD,CAAaC,SAAUA,S,GAvDpBQ,cCqBJC,G,OApBK,SAAC,GAAgB,IAG3BC,EAH0B,EAAdV,SAGWW,KACzB,SAACC,EAASC,GAAV,OACI,kBAAC,EAAD,CACIC,KAAMF,EAAQG,MAAMC,MAAM,KAAK,GAC/BjB,KAAMa,EAAQb,KACdkB,IAAKJ,OAKjB,OACI,wBAAI/B,UAAU,eACT4B,KCNEQ,G,OAXC,SAAC,GAAiB,IAAhBJ,EAAe,EAAfA,KAAKf,EAAU,EAAVA,KACnB,OACI,wBAAIjB,UAAY,WACZ,2BACI,2BAAIgC,GAAS,6BAAMf,MC8BpBoB,G,yDAjCX,WAAYxB,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAM,CACPwB,SAAQ,GAHE,E,sEAMQjB,GAAW,IAAD,OAC7BC,KAAKT,MAAM0B,UAAUlB,EAAUkB,UAC9BjB,KAAKC,SAAS,CACVe,SAAQ,IAEZd,YACI,WACI,EAAKD,SAAS,CACVe,SAAQ,MAEd,Q,+BAIH,IAAD,EACqBhB,KAAKT,MAAzB2B,EADD,EACCA,QAASD,EADV,EACUA,QACTD,EAAWhB,KAAKR,MAAhBwB,QACP,OAAIC,GAAYD,EAEZ,yBAAKtC,UAAY,mBACb,yBAAKA,UAAS,kBAAesC,EAAQ,YAAY,UAAnC,cACTE,IAJmB,S,GAxBlBd,c,2CCDf,SAASe,EAAQpC,GACpB,OAAOqC,IAAMC,IAAI,8CAAgDtC,GAG9D,SAASuC,EAAavC,GACzB,OAAOqC,IAAMC,IAAN,qDAAwDtC,EAAxD,c,ICsFIwC,E,kDAxFX,WAAYhC,GAAQ,IAAD,8BACf,gBAYJiC,cAbmB,uCAaH,WAAOzC,GAAP,uBAAA0C,EAAA,6DACZ,EAAKxB,SAAS,CACVyB,UAAS,IAFD,kBAKWC,QAAQC,IAAI,CAC3BC,EAAgB9C,GAChB8C,EAAoB9C,KAPhB,OAKF+C,EALE,SASaA,EAAK,GAAGC,KAAtBrC,EATC,EASDA,MAAMC,EATL,EASKA,KACPC,EAAWkC,EAAK,GAAGC,KACzBC,QAAQC,IAAIH,GACZ,EAAK7B,SAAS,CACVlB,SACAmD,KAAM,CACFxC,QACAC,QAEJC,WACA8B,UAAS,IAnBL,kDAsBR,EAAKzB,SAAS,CACVyB,UAAS,IAEb,EAAKS,cAzBG,0DAbG,wDA0CnBC,oBAAsB,SAACC,GACnB,IAAMtD,EAAS,EAAKS,MAAMT,OAChB,SAAPsD,EACC,EAAKb,cAAczC,EAAO,GAE1B,EAAKyC,cAAczC,EAAO,IA/Cf,EAkDnBoD,YAAc,WACV,EAAKlC,SAAS,CACVqC,mBAAkB,IAGtBpC,YACI,WACI,EAAKD,SAAS,CACVqC,mBAAkB,MAEvB,OA1DP,EAAK9C,MAAQ,CACTT,OAAO,EACP2C,UAAW,EACXQ,KAAO,CACHxC,MAAM,KACNC,KAAK,MAETC,SAAS,GACT0C,mBAAkB,GAVP,E,gEAgEftC,KAAKwB,cAAc,K,+BAEb,IAAD,EACyDxB,KAAKR,MAA5DT,EADF,EACEA,OAAQ2C,EADV,EACUA,SAAUQ,EADpB,EACoBA,KAAMtC,EAD1B,EAC0BA,SAAU0C,EADpC,EACoCA,kBAEzC,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CACIvD,OAAQA,EACRC,SAAU0C,EACV5C,QAAWkB,KAAKoC,sBAEpB,kBAAC,EAAD,CACIrD,OAAQA,EACRW,MAAOwC,EAAKxC,MACZC,KAAMuC,EAAKvC,KACXC,SAAUA,IAEd,kBAAC,EAAD,CAASqB,QAASqB,EAAmBpB,QAAU,kC,GApFnCd,aCUbmC,E,uKARX,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALUnC,a,kBCKdoC,OAAOb,UACTa,OAAOb,QAAUA,KAEnBc,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.84c20082.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = ()=>(\r\n    <div className=\"Header\">\r\n        POSTS\r\n    </div>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\nimport './PostWrapper.css';\r\n\r\nconst PostWrapper = ({children}) => {\r\n    return (\r\n        <div className = \"PostWrapper\">\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostWrapper;\r\n","import React from 'react';\r\nimport {Button} from 'semantic-ui-react';\r\nimport './Navigator.css';\r\n\r\nconst Navigate = ({onClick, postId, disabled}) => (\r\n    <div className = \"Navigate\" >\r\n        \r\n        <Button\r\n            color = \"teal\"\r\n            content = \"Previous\"\r\n            icon = \"left arrow\"\r\n            labelPosition = \"left\"\r\n            onClick = {\r\n                () => onClick('PREV')\r\n            }\r\n            disabled={disabled}\r\n        />\r\n        <div className = \"Navigate-page-num\">\r\n            {postId}\r\n        </div>\r\n        <Button\r\n            color = \"teal\"\r\n            content = \"Next\"\r\n            icon = \"right arrow\"\r\n            labelPosition = \"right\"\r\n            className = \"Navigate-right-button\"\r\n            onClick = {\r\n                () => onClick('NEXT')\r\n            }\r\n            disabled={disabled}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default Navigate;","import React, { Component } from 'react';\r\nimport './Post.css';\r\nimport { CommentList } from '../';\r\n\r\nclass Post extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postInfo : {\r\n                title:null,\r\n                body:null,\r\n                comments:[]\r\n            },\r\n            animate:false,\r\n            direction:'left'\r\n        }\r\n    }\r\n    componentWillReceiveProps (nextProps){\r\n        const {title,body,comments} = nextProps;\r\n        if(this.props.postId !== nextProps.postId){\r\n            const direction = this.props.postId < nextProps.postId ? 'left' : 'right';\r\n            this.setState({\r\n                direction,\r\n                animate:true\r\n            });\r\n\r\n            setTimeout(\r\n                ()=>{\r\n                    this.setState({\r\n                        postInfo:{\r\n                            title,body,comments\r\n                        },\r\n                        animate : false\r\n                    })\r\n                },500\r\n            );\r\n            return;\r\n        }\r\n        this.setState({\r\n            postInfo : {\r\n                title,body,comments\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { title, body, comments} = this.state.postInfo;\r\n\r\n        const{animate, direction} = this.state;\r\n\r\n        const animation = animate ? (direction==='left' ? 'bounceOutLeft' : 'bounceOutRight')\r\n        : (direction==='left' ? 'bounceInRight' : 'bounceInLeft');\r\n        if(title===null) return null;\r\n\r\n        return (\r\n            <div className = {`Post animated ${animation}`}>\r\n                <h1>{title}</h1>\r\n                <p>\r\n                    {body}\r\n                </p>\r\n                <CommentList comments={comments}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Comment} from '../';\r\n\r\nimport './CommentList.css';\r\n\r\nconst CommentList = ({comments}) => {\r\n\r\n    // map data to components\r\n    const commentList = comments.map(\r\n        (comment, index)=>(\r\n            <Comment \r\n                name={comment.email.split('@')[0]}\r\n                body={comment.body} \r\n                key={index}\r\n            />\r\n        )\r\n    );\r\n\r\n    return (\r\n        <ul className=\"CommentList\">\r\n            {commentList}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default CommentList;","import React from 'react';\r\nimport './Comment.css';\r\n\r\nconst Comment = ({name,body}) => {\r\n    return (\r\n        <li className = \"Comment\">\r\n            <p>\r\n                <b>{name}</b><br/>{body}\r\n            </p>\r\n        </li>\r\n    );\r\n};\r\n\r\n\r\nexport default Comment;","import React, {Component} from 'react';\r\nimport \"./Warning.css\";\r\n\r\nclass Warning extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            closing:false\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(this.props.visible&&!nextProps.visible){\r\n            this.setState({\r\n                closing:true\r\n            });\r\n            setTimeout(\r\n                ()=>{\r\n                    this.setState({\r\n                        closing:false\r\n                    });\r\n                },1000\r\n            );\r\n        }\r\n    }\r\n    render () {\r\n        const {message, visible} = this.props;\r\n        const {closing} = this.state;\r\n        if(!visible && !closing) return null;\r\n        return (\r\n            <div className = \"Warning-wrapper\">\r\n                <div className = {`Warning ${closing?'bounceOut':'bountIn'} animated`}>\r\n                    {message}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Warning;","import axios from 'axios';\r\n\r\nexport function getPost(postId) {\r\n    return axios.get('https://jsonplaceholder.typicode.com/posts/' + postId);\r\n}\r\n\r\nexport function getComments (postId) {\r\n    return axios.get(`https://jsonplaceholder.typicode.com/posts/${postId}/comments`)\r\n}","import React, {Component} from 'react';\r\nimport { PostWrapper, Navigate, Post, Warning } from '../../components'\r\nimport * as service from '../../services/post'\r\nclass PostContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            postId:1,\r\n            fetching : false,\r\n            post : {\r\n                title:null,\r\n                body:null\r\n            },\r\n            comments:[],\r\n            warningVisibility:false\r\n        };\r\n    }\r\n    fetchPostInfo = async (postId) => {\r\n        this.setState({\r\n            fetching:true\r\n        });\r\n        try{\r\n            const info = await Promise.all([\r\n                service.getPost(postId),\r\n                service.getComments(postId)\r\n            ]);\r\n            const {title,body} = info[0].data;\r\n            const comments = info[1].data;\r\n            console.log(info);\r\n            this.setState({\r\n                postId,\r\n                post: {\r\n                    title,\r\n                    body\r\n                },\r\n                comments,\r\n                fetching:false\r\n            });\r\n        } catch(e){\r\n            this.setState({\r\n                fetching:false\r\n            });\r\n            this.showWarning();\r\n        }\r\n        \r\n    }\r\n    handlenavigateClick = (type) => {\r\n        const postId = this.state.postId;\r\n        if(type===\"NEXT\"){\r\n            this.fetchPostInfo(postId+1);\r\n        } else {\r\n            this.fetchPostInfo(postId-1);\r\n        }\r\n    }\r\n    showWarning = () => {\r\n        this.setState({\r\n            warningVisibility:true\r\n        });\r\n\r\n        setTimeout(\r\n            ()=>{\r\n                this.setState({\r\n                    warningVisibility:false\r\n                });\r\n            }, 1500\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.fetchPostInfo(1);\r\n    }\r\n    render() {\r\n        const {postId, fetching, post, comments, warningVisibility} = this.state;\r\n\r\n        return (\r\n            <PostWrapper>\r\n                <Navigate \r\n                    postId={postId}\r\n                    disabled={fetching}\r\n                    onClick = {this.handlenavigateClick}\r\n                />\r\n                <Post\r\n                    postId={postId}\r\n                    title={post.title}\r\n                    body={post.body}\r\n                    comments={comments}\r\n                />\r\n                <Warning visible={warningVisibility} message = \"That post does not exist\"/>\r\n            </PostWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostContainer;","import React, { Component } from 'react';\nimport {Header} from './components';\nimport {PostContainer} from './containers';\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <PostContainer />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport './animation.css';\nimport Promise from 'promise-polyfill';\n\nif(!window.Promise){\n  window.Promise = Promise;\n}\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}